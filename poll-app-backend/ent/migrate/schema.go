// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// PollsColumns holds the columns for the "polls" table.
	PollsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "title", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "poll_type", Type: field.TypeString, Default: "single_choice"},
		{Name: "created_by", Type: field.TypeString, Nullable: true},
		{Name: "max_votes_per_user", Type: field.TypeInt, Default: 1},
		{Name: "expires_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// PollsTable holds the schema information for the "polls" table.
	PollsTable = &schema.Table{
		Name:       "polls",
		Columns:    PollsColumns,
		PrimaryKey: []*schema.Column{PollsColumns[0]},
	}
	// PollOptionsColumns holds the columns for the "poll_options" table.
	PollOptionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "option_text", Type: field.TypeString},
		{Name: "vote_count", Type: field.TypeInt, Default: 0},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "poll_options", Type: field.TypeInt},
	}
	// PollOptionsTable holds the schema information for the "poll_options" table.
	PollOptionsTable = &schema.Table{
		Name:       "poll_options",
		Columns:    PollOptionsColumns,
		PrimaryKey: []*schema.Column{PollOptionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "poll_options_polls_options",
				Columns:    []*schema.Column{PollOptionsColumns[4]},
				RefColumns: []*schema.Column{PollsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// VotesColumns holds the columns for the "votes" table.
	VotesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "voter_identifier", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "poll_votes", Type: field.TypeInt},
		{Name: "poll_option_votes", Type: field.TypeInt},
	}
	// VotesTable holds the schema information for the "votes" table.
	VotesTable = &schema.Table{
		Name:       "votes",
		Columns:    VotesColumns,
		PrimaryKey: []*schema.Column{VotesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "votes_polls_votes",
				Columns:    []*schema.Column{VotesColumns[3]},
				RefColumns: []*schema.Column{PollsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "votes_poll_options_votes",
				Columns:    []*schema.Column{VotesColumns[4]},
				RefColumns: []*schema.Column{PollOptionsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		PollsTable,
		PollOptionsTable,
		UsersTable,
		VotesTable,
	}
)

func init() {
	PollOptionsTable.ForeignKeys[0].RefTable = PollsTable
	VotesTable.ForeignKeys[0].RefTable = PollsTable
	VotesTable.ForeignKeys[1].RefTable = PollOptionsTable
}
