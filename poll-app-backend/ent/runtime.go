// Code generated by ent, DO NOT EDIT.

package ent

import (
	"backend/ent/poll"
	"backend/ent/polloption"
	"backend/ent/schema"
	"backend/ent/user"
	"backend/ent/vote"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	pollFields := schema.Poll{}.Fields()
	_ = pollFields
	// pollDescTitle is the schema descriptor for title field.
	pollDescTitle := pollFields[0].Descriptor()
	// poll.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	poll.TitleValidator = pollDescTitle.Validators[0].(func(string) error)
	// pollDescPollType is the schema descriptor for poll_type field.
	pollDescPollType := pollFields[2].Descriptor()
	// poll.DefaultPollType holds the default value on creation for the poll_type field.
	poll.DefaultPollType = pollDescPollType.Default.(string)
	// pollDescMaxVotesPerUser is the schema descriptor for max_votes_per_user field.
	pollDescMaxVotesPerUser := pollFields[4].Descriptor()
	// poll.DefaultMaxVotesPerUser holds the default value on creation for the max_votes_per_user field.
	poll.DefaultMaxVotesPerUser = pollDescMaxVotesPerUser.Default.(int)
	// pollDescCreatedAt is the schema descriptor for created_at field.
	pollDescCreatedAt := pollFields[6].Descriptor()
	// poll.DefaultCreatedAt holds the default value on creation for the created_at field.
	poll.DefaultCreatedAt = pollDescCreatedAt.Default.(func() time.Time)
	// pollDescUpdatedAt is the schema descriptor for updated_at field.
	pollDescUpdatedAt := pollFields[7].Descriptor()
	// poll.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	poll.DefaultUpdatedAt = pollDescUpdatedAt.Default.(func() time.Time)
	// poll.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	poll.UpdateDefaultUpdatedAt = pollDescUpdatedAt.UpdateDefault.(func() time.Time)
	polloptionFields := schema.PollOption{}.Fields()
	_ = polloptionFields
	// polloptionDescOptionText is the schema descriptor for option_text field.
	polloptionDescOptionText := polloptionFields[0].Descriptor()
	// polloption.OptionTextValidator is a validator for the "option_text" field. It is called by the builders before save.
	polloption.OptionTextValidator = polloptionDescOptionText.Validators[0].(func(string) error)
	// polloptionDescVoteCount is the schema descriptor for vote_count field.
	polloptionDescVoteCount := polloptionFields[1].Descriptor()
	// polloption.DefaultVoteCount holds the default value on creation for the vote_count field.
	polloption.DefaultVoteCount = polloptionDescVoteCount.Default.(int)
	// polloptionDescCreatedAt is the schema descriptor for created_at field.
	polloptionDescCreatedAt := polloptionFields[2].Descriptor()
	// polloption.DefaultCreatedAt holds the default value on creation for the created_at field.
	polloption.DefaultCreatedAt = polloptionDescCreatedAt.Default.(func() time.Time)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userFields[2].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	voteFields := schema.Vote{}.Fields()
	_ = voteFields
	// voteDescCreatedAt is the schema descriptor for created_at field.
	voteDescCreatedAt := voteFields[1].Descriptor()
	// vote.DefaultCreatedAt holds the default value on creation for the created_at field.
	vote.DefaultCreatedAt = voteDescCreatedAt.Default.(func() time.Time)
}
